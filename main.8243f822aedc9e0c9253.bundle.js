webpackJsonp([1],{0:function(t,e,n){t.exports=n("S0dp")},S0dp:function(t,e,n){"use strict";function o(t){if("string"==typeof t){var e=/^[\+\-]?[0-9\.]+,[ ]*\ ?[\+\-]?[0-9\.]+$/;return t.match(e)&&(t="["+t+"]"),JSON.parse(function(t){try{return JSON.parse(t),t}catch(e){return t.replace(/([\$\w]+)\s*:/g,function(t,e){return'"'+e+'":'}).replace(/'([^']+)'/g,function(t,e){return'"'+e+'"'})}}(t))}return t}function i(t){return t.replace(/(?:^\w|[A-Z]|\b\w)/g,function(t,e){return 0===e?t.toLowerCase():t.toUpperCase()}).replace(/\s+/g,"")}function r(){return"object"==typeof google&&"object"==typeof google.maps}function a(t){return t.replace("@Component({","@Component({\n  selector: 'my-app',").replace("\nimport { SourceCodeService } from '../source-code.service';","").replace('<pre class="prettyprint">{{code}}</pre>',"").replace(/sc\.getText\(['"A-Za-z0-9]+\)\.subscribe\(text => this\.code = text\);/,"").replace(/[, public]*sc: SourceCodeService\)/,")").replace(/<code>[\s\S]*<\/code>/,"").replace("code: string;","").replace(/constructor\s*\(\)\s*{\s*}/m,"").replace('<button (click)="sc.plnkr(code)">See in plunker</button>',"").replace(/export class [A-Za-z0-9]+Component/,"export class AppComponent").replace(/^\s*\n/gm,"\n")}Object.defineProperty(e,"__esModule",{value:!0});var s=n("/oeL"),p=n("Qa4U"),c=n("6Xbx"),l=n("fc+i"),u=n("bm2B"),m=n("CPp0"),d=n("qbdv"),g=n("bV9t"),h=function(){function t(t,e,n,o){var i=this;this.nguiMapComponent=t,this.mapObjectName=e,this.inputs=n,this.outputs=o,this.initialized$=new s.x,this._subscriptions=[],this.nguiMap=this.nguiMapComponent.nguiMap,this.optionBuilder=this.nguiMapComponent.optionBuilder,this.outputs.forEach(function(t){return i[t]=new s.x}),this.mapObjectName=e}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),console.log(this.mapObjectName,"initialization options",this.objectOptions),"string"==typeof this.objectOptions.position&&delete this.objectOptions.position,"string"==typeof this.objectOptions.center&&delete this.objectOptions.center,this.libraryName?this.mapObject=new google.maps[this.libraryName][this.mapObjectName](this.objectOptions):this.mapObject=new google.maps[this.mapObjectName](this.objectOptions),this.mapObject.setMap(this.nguiMapComponent.map),this.mapObject.mapObjectName=this.mapObjectName,this.mapObject.nguiMapComponent=this.nguiMapComponent,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},t.prototype.ngOnChanges=function(t){console.log(this.mapObjectName,"objectOptions are changed",t),this.nguiMap.updateGoogleObject(this.mapObject,t)},t.prototype.ngOnDestroy=function(){this._subscriptions.map(function(t){return t.unsubscribe()}),this.nguiMapComponent.removeFromMapObjectGroup(this.mapObjectName,this.mapObject),this.mapObject&&this.nguiMap.clearObjectEvents(this.outputs,this,"mapObject")},c.a([Object(s.T)(),c.c("design:type","function"==typeof(e=void 0!==s.x&&s.x)&&e||Object)],t.prototype,"initialized$",void 0),t;var e}(),f=function(){function t(){}return t.prototype.googlizeAllInputs=function(t,e){var n=this,o={};return e.options?(console.log("userInputs.options .................",e.options),o=e.options,this.onlyOptionsGiven(t,e)||console.error('when "options" are used, other options are ignored')):t.forEach(function(t){void 0!==e[t]&&(o[t]=n.googlize(e[t],{key:t}))}),o},t.prototype.googlizeMultiple=function(t,e){e=e||{};for(var n in t){var o=t[n];"string"!=typeof o?e[n]=o:e.doNotConverStringToNumber&&o.match(/^[0-9]+$/)||(e[n]=this.googlize(o,{key:n}))}return e},t.prototype.googlize=function(t,e){e=e||{};var n=t;if("string"==typeof t&&(n="false"!==t&&("0"===t?0:this.getJSONParsed(t,e)||this.getAnyMapObject(t)||this.getAnyMapConstant(t,e)||this.getDateObject(t)||t)),e.key){var o=e.key;n instanceof Array?"bounds"===o?n=new google.maps.LatLngBounds(n[0],n[1]):"icons"===o?n=this.getMapIcons(n):("position"===o||o.match(/^geoFallback/))&&(n=this.getLatLng(n)):n instanceof Object&&("icon"===o?n=this.getMarkerIcon(n):o.match(/ControlOptions$/)&&(n=this.getMapControlOption(n)))}return delete n.doNotConverStringToNumber,delete n.key,n},t.prototype.getLatLng=function(t){var e;return t[0].constructor===Array?e=t.map(function(t){return new google.maps.LatLng(t[0],t[1])}):!isNaN(parseFloat(t[0]))&&isFinite(t[0])&&(e=new google.maps.LatLng(t[0],t[1])),e},t.prototype.getJSONParsed=function(t,e){var n;try{if((n=o(t))instanceof Array)n[0].constructor!==Object&&(n=this.getLatLng(n));else if(n===Object(n)){var i=e;i.doNotConverStringToNumber=!0,n=this.googlizeMultiple(n,i)}}catch(t){}return n},t.prototype.getAnyMapObject=function(t){var e;if(t.match(/^[A-Z][a-zA-Z0-9]+\(.*\)$/))try{e=Function("return new google.maps."+t+";")()}catch(t){}return e},t.prototype.getAnyMapConstant=function(t,e){var n;if(t.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/))try{var o=t.match(/^([A-Z][a-zA-Z0-9]+)\.([A-Z]+)$/);n=google.maps[o[1]][o[2]]}catch(t){}else if(t.match(/^[A-Z]+$/))try{var i=e.key.charAt(0).toUpperCase()+e.key.slice(1);n=google.maps[i][t]}catch(t){}return n},t.prototype.getMapControlOption=function(t){var e=t;for(var n in e)if(e[n]){var o=e[n];if("string"==typeof o?o=o.toUpperCase():"mapTypeIds"===n&&(o=o.map(function(t){return t.match(/^[A-Z]+$/)?google.maps.MapTypeId[t.toUpperCase()]:t})),"style"===n){var i=n.replace(/Options$/,"")+"Style";e[n]=google.maps[i][o]}else e[n]="position"===n?google.maps.ControlPosition[o]:o}return e},t.prototype.getDateObject=function(t){var e;if(t.match(/^(\d{4}\-\d\d\-\d\d([tT][\d:\.]*)?)([zZ]|([+\-])(\d\d):?(\d\d))?$/))try{e=new Date(t)}catch(t){}return e},t.prototype.getMapIcons=function(t){return t.map(function(t){return t.icon.path.match(/^[A-Z_]+$/)&&(t.icon.path=google.maps.SymbolPath[t.icon.path]),t})},t.prototype.getMarkerIcon=function(t){var e=t;(""+e.path).match(/^[A-Z_]+$/)&&(e.path=google.maps.SymbolPath[e.path]);for(var n in e){var o=e[n];"anchor"===n||"origin"===n||"labelOrigin"===n?e[n]=new google.maps.Point(o[0],o[1]):"size"!==n&&"scaledSize"!==n||(e[n]=new google.maps.Size(o[0],o[1]))}return e},t.prototype.onlyOptionsGiven=function(t,e){for(var n=0;n<t.length;n++){var o=t[n];if("options"!==o&&void 0!==e[o])return!1}return!0},t=c.a([Object(s.C)()],t)}(),b=n("AP4T"),y=function(){function t(){}return t.prototype.getCurrentPosition=function(t){return t=t||{timeout:5e3},new b.a(function(e){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(t){e.next(t),e.complete()},function(t){return e.error(t)},t):e.error("Browser Geolocation service failed.")})},t=c.a([Object(s.C)()],t)}(),v=n("5q5V"),O=new s.D("NG_MAP_CONFIG_TOKEN"),k=n("l+DM"),j=function(){function t(t){this.config=t,this.api$=k.a.call(new v.a(1)),this.config=this.config||{apiUrl:"https://maps.google.com/maps/api/js"}}return t.prototype.ngOnDestroy=function(){this.api$.complete()},t}(),C=function(t){function e(e,n){var o=t.call(this,n)||this;return o.zone=e,o}return c.b(e,t),e.prototype.load=function(){var t=this;"undefined"!=typeof window&&(r()?this.api$.next(google.maps):document.querySelector("#ngui-map-api")||(window.nguiMapRef=window.nguiMapRef||[],window.nguiMapRef.push({zone:this.zone,componentFn:function(){return t.api$.next(google.maps)}}),this.addGoogleMapsApi()))},e.prototype.addGoogleMapsApi=function(){window.initNguiMap=window.initNguiMap||function(){window.nguiMapRef.forEach(function(t){t.zone.run(function(){t.componentFn()})}),window.nguiMapRef.splice(0,window.nguiMapRef.length)};var t=document.createElement("script");t.id="ngui-map-api";var e=this.config.apiUrl;e+=-1!==e.indexOf("?")?"&":"?",t.src=e+"callback=initNguiMap",document.querySelector("body").appendChild(t)},e=c.a([Object(s.C)(),c.d(1,Object(s.S)()),c.d(1,Object(s.B)(O)),c.c("design:paramtypes",["function"==typeof(n=void 0!==s.R&&s.R)&&n||Object,Object])],e);var n}(j),w=(function(t){function e(e){return t.call(this,e)||this}c.b(e,t),e.prototype.load=function(){var t=this;if("undefined"!=typeof window)if(r())this.api$.next(google.maps);else if(!document.querySelector("#ngui-map-api")){var e=document.createElement("script");e.id="ngui-map-api",e.async=!0,e.onload=function(){return t.api$.next(google.maps)},e.src=this.config.apiUrl,document.querySelector("body").appendChild(e)}},e=c.a([Object(s.C)(),c.d(0,Object(s.S)()),c.d(0,Object(s.B)(O)),c.c("design:paramtypes",[Object])],e)}(j),function(){function t(t){this.apiLoader=t,this.apiLoaderSubs=[]}return t.prototype.geocode=function(t){var e=this;return new b.a(function(n){e.apiLoaderSubs.push(e.apiLoader.api$.subscribe(function(){return e.requestGeocode(t,n)}))})},t.prototype.ngOnDestroy=function(){this.apiLoaderSubs.map(function(t){return t.unsubscribe()})},t.prototype.requestGeocode=function(t,e){(new google.maps.Geocoder).geocode(t,function(t,n){n===google.maps.GeocoderStatus.OK?(e.next(t),e.complete()):e.error(t)})},t=c.a([Object(s.C)(),c.c("design:paramtypes",["function"==typeof(e=void 0!==j&&j)&&e||Object])],t);var e}()),M=function(){function t(t,e,n){var o=this;this.geoCoder=t,this.optionBuilder=e,this.zone=n,this.updateGoogleObject=function(t,e){var n,i,r;if(t)for(var a in e)r="set"+a.replace(/^[a-z]/,function(t){return t.toUpperCase()}),i=e[a].currentValue,-1!==["position","center"].indexOf(a)&&"string"==typeof i?function(e){o.geoCoder.geocode({address:i}).subscribe(function(n){"function"==typeof t[e]?t[e](n[0].geometry.location):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.')})}(r):(n=o.optionBuilder.googlize(i),"function"==typeof t[r]?t[r](n):console.error('Not all options are dynamically updatable according to Googles Maps API V3 documentation.\nPlease check Google Maps API documentation, and use "setOptions" instead.'))}}return t.prototype.setObjectEvents=function(t,e,n){var o=this;t.forEach(function(t){var i=t.replace(/([A-Z])/g,function(t){return"_"+t.toLowerCase()}).replace(/^map_/,""),r=o.zone;r.runOutsideAngular(function(){e[n].addListener(i,function(n){var o=n||{};o.target=this,r.run(function(){return e[t].emit(o)})})})})},t.prototype.clearObjectEvents=function(t,e,n){var o=this;t.forEach(function(t){var i=t.replace(/([A-Z])/g,function(t){return"_"+t.toLowerCase()}).replace(/^map_/,"");o.zone.runOutsideAngular(function(){e[n]&&google.maps.event.clearListeners(e[n],i)})}),e[n]&&(e[n].setMap&&e[n].setMap(null),delete e[n].nguiMapComponent,delete e[n])},t=c.a([Object(s.C)(),c.c("design:paramtypes",["function"==typeof(e=void 0!==w&&w)&&e||Object,"function"==typeof(n=void 0!==f&&f)&&n||Object,"function"==typeof(o=void 0!==s.R&&s.R)&&o||Object])],t);var e,n,o}(),L=n("TO51"),z=n("QPPV"),x=["backgroundColor","center","disableDefaultUI","disableDoubleClickZoom","draggable","draggableCursor","draggingCursor","heading","keyboardShortcuts","mapMaker","mapTypeControl","mapTypeId","maxZoom","minZoom","noClear","overviewMapControl","panControl","panControlOptions","rotateControl","scaleControl","scrollwheel","streetView","styles","tilt","zoom","streetViewControl","zoomControl","zoomControlOptions","mapTypeControlOptions","overviewMapControlOptions","rotateControlOptions","scaleControlOptions","streetViewControlOptions","fullscreenControl","fullscreenControlOptions","options","geoFallbackCenter"],S=["bounds_changed","center_changed","click","dblclick","drag","dragend","dragstart","heading_changed","idle","typeid_changed","mousemove","mouseout","mouseover","projection_changed","resize","rightclick","tilesloaded","tile_changed","zoom_changed","mapClick","mapMouseover","mapMouseout","mapMousemove","mapDrag","mapDragend","mapDragstart"],I=function(){function t(t,e,n,o,i,r,a){var p=this;this.optionBuilder=t,this.elementRef=e,this.geolocation=n,this.geoCoder=o,this.nguiMap=i,this.apiLoader=r,this.zone=a,this.mapReady$=new s.x,this.mapOptions={},this.inputChanges$=new L.a,this.infoWindows={},this.mapIdledOnce=!1,this.initializeMapAfterDisplayed=!1,r.load(),S.forEach(function(t){return p[t]=new s.x})}return t.prototype.ngAfterViewInit=function(){var t=this;this.apiLoaderSub=this.apiLoader.api$.subscribe(function(){return t.initializeMap()})},t.prototype.ngAfterViewChecked=function(){this.initializeMapAfterDisplayed&&this.el&&this.el.offsetWidth>0&&this.initializeMap()},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.initializeMap=function(){var t=this;this.el=this.elementRef.nativeElement.querySelector(".google-map"),this.el&&0===this.el.offsetWidth?this.initializeMapAfterDisplayed=!0:(this.initializeMapAfterDisplayed=!1,this.mapOptions=this.optionBuilder.googlizeAllInputs(x,this),console.log("ngui-map mapOptions",this.mapOptions),this.mapOptions.zoom=this.mapOptions.zoom||15,"string"==typeof this.mapOptions.center&&delete this.mapOptions.center,this.zone.runOutsideAngular(function(){t.map=new google.maps.Map(t.el,t.mapOptions),t.map.mapObjectName="NguiMapComponent",t.mapOptions.center||t.setCenter(),t.nguiMap.setObjectEvents(S,t,"map"),t.map.addListener("idle",function(){t.mapIdledOnce||(t.mapIdledOnce=!0,setTimeout(function(){t.mapReady$.emit(t.map)}))}),z.a.call(t.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.map,e)}),"undefined"!=typeof window&&window.nguiMapRef&&(window.nguiMapRef.map=t.map)}))},t.prototype.setCenter=function(){var t=this;this.center?"string"==typeof this.center&&this.geoCoder.geocode({address:this.center}).subscribe(function(e){console.log("setting map center from address",t.center),t.map.setCenter(e[0].geometry.location)},function(e){t.map.setCenter(t.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))}):this.geolocation.getCurrentPosition().subscribe(function(e){console.log("setting map center from current location");var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.map.setCenter(n)},function(e){console.error("ngui-map: Error finding the current position"),t.map.setCenter(t.mapOptions.geoFallbackCenter||new google.maps.LatLng(0,0))})},t.prototype.openInfoWindow=function(t,e){this.infoWindows[t].open(e)},t.prototype.closeInfoWindow=function(t){this.infoWindows[t]&&this.infoWindows[t].close()},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.el&&!this.initializeMapAfterDisplayed&&this.nguiMap.clearObjectEvents(S,this,"map"),this.apiLoaderSub&&this.apiLoaderSub.unsubscribe()},t.prototype.addToMapObjectGroup=function(t,e){var n=i(t.toLowerCase())+"s";this.map[n]=this.map[n]||[],this.map[n].push(e)},t.prototype.removeFromMapObjectGroup=function(t,e){var n=i(t.toLowerCase())+"s";if(this.map&&this.map[n]){var o=this.map[n].indexOf(e);console.log("index",e,o),o>-1&&this.map[n].splice(o,1)}},c.a([Object(s.T)(),c.c("design:type","function"==typeof(e=void 0!==s.x&&s.x)&&e||Object)],t.prototype,"mapReady$",void 0),t=c.a([Object(s.o)({selector:"ngui-map",providers:[M,f,w,y],styles:["\n    ngui-map {display: block; height: 300px;}\n    .google-map {width: 100%; height: 100%}\n  "],inputs:x,outputs:S,encapsulation:s._19.None,template:'\n    <div class="google-map"></div>\n    <ng-content></ng-content>\n  '}),c.c("design:paramtypes",["function"==typeof(n=void 0!==f&&f)&&n||Object,"function"==typeof(o=void 0!==s.v&&s.v)&&o||Object,"function"==typeof(r=void 0!==y&&y)&&r||Object,"function"==typeof(a=void 0!==w&&w)&&a||Object,"function"==typeof(p=void 0!==M&&M)&&p||Object,"function"==typeof(l=void 0!==j&&j)&&l||Object,"function"==typeof(u=void 0!==s.R&&s.R)&&u||Object])],t);var e,n,o,r,a,p,l,u}(),R=[],T=[],P=function(t){function e(e){return t.call(this,e,"BicyclingLayer",R,T)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > bicycling-layer",inputs:R,outputs:T}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),A=["content","disableAutoPan","maxWidth","pixelOffset","position","zIndex","options"],E=["closeclick","content_changed","domready","position_changed","zindex_changed"],N=function(){function t(t,e,n){var o=this;this.elementRef=t,this.nguiMap=e,this.nguiMapComponent=n,this.initialized$=new s.x,this.objectOptions={},this.inputChanges$=new L.a,this.elementRef.nativeElement.style.display="none",E.forEach(function(t){return o[t]=new s.x})}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.initialize=function(){var t=this;console.log("infowindow is being initialized"),this.objectOptions=this.nguiMapComponent.optionBuilder.googlizeAllInputs(A,this),this.infoWindow=new google.maps.InfoWindow(this.objectOptions),this.infoWindow.mapObjectName="InfoWindow",console.log("INFOWINDOW objectOptions",this.objectOptions),this.elementRef.nativeElement.id?this.nguiMapComponent.infoWindows[this.elementRef.nativeElement.id]=this:console.error('An InfoWindow must have an id. e.g. id="detail"'),this.nguiMap.setObjectEvents(E,this,"infoWindow"),z.a.call(this.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.infoWindow,e)}),this.nguiMapComponent.addToMapObjectGroup("InfoWindow",this.infoWindow),this.initialized$.emit(this.infoWindow)},t.prototype.open=function(t){this.infoWindow.setContent(this.template.element.nativeElement),this.infoWindow.open(this.nguiMapComponent.map,t)},t.prototype.close=function(){this.infoWindow&&this.infoWindow.close()},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.infoWindow&&(this.nguiMap.clearObjectEvents(E,this,"infoWindow"),delete this.infoWindow)},c.a([Object(s.T)(),c.c("design:type","function"==typeof(e=void 0!==s.x&&s.x)&&e||Object)],t.prototype,"initialized$",void 0),c.a([Object(s._16)("template",{read:s._18}),c.c("design:type","function"==typeof(n=void 0!==s._18&&s._18)&&n||Object)],t.prototype,"template",void 0),t=c.a([Object(s.o)({selector:"ngui-map > info-window",inputs:A,outputs:E,template:"<div #template><ng-content></ng-content></div>"}),c.c("design:paramtypes",["function"==typeof(o=void 0!==s.v&&s.v)&&o||Object,"function"==typeof(i=void 0!==M&&M)&&i||Object,"function"==typeof(r=void 0!==I&&I)&&r||Object])],t);var e,n,o,i,r}(),D=["position"],$=["animationChanged","click","clickableChanged","cursorChanged","dblclick","drag","dragend","draggableChanged","dragstart","flatChanged","iconChanged","mousedown","mouseout","mouseover","mouseup","positionChanged","rightclick","shapeChanged","titleChanged","visibleChanged","zindexChanged","map_click","map_mouseover","map_mouseout","map_mouseup","map_mousedown","map_drag","map_dragend"],F=function(){function t(t,e,n){var o=this;this.nguiMapComponent=t,this.elementRef=e,this.nguiMap=n,this.initialized$=new s.x,this.inputChanges$=new L.a,this.elementRef.nativeElement.style.display="none",$.forEach(function(t){return o[t]=new s.x})}return t.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},t.prototype.ngOnChanges=function(t){this.inputChanges$.next(t)},t.prototype.ngOnDestroy=function(){this.inputChanges$.complete(),this.nguiMapComponent.removeFromMapObjectGroup("CustomMarker",this.mapObject),this.mapObject&&this.nguiMap.clearObjectEvents($,this,"mapObject")},t.prototype.initialize=function(){var t=this;console.log("custom-marker is being initialized"),this.el=this.elementRef.nativeElement,this.mapObject=function(t,e){return new(function(t){function e(e,n){var o=t.call(this)||this;return o.visible=!0,o.setPosition=function(t){if(o.htmlEl.style.visibility="hidden","Array"===t.constructor.name?o.position=new google.maps.LatLng(t[0],t[1]):"string"==typeof t?(new google.maps.Geocoder).geocode({address:t},function(e,n){n===google.maps.GeocoderStatus.OK?(console.log("setting custom marker position from address",t),o.setPosition(e[0].geometry.location)):console.log("Error in custom marker geo coding, position")}):t&&"function"==typeof t.lng&&(o.position=t),o.getProjection()&&"function"==typeof o.position.lng){var e=function(){var t=o.getProjection().fromLatLngToDivPixel(o.position),e=Math.round(t.x-o.htmlEl.offsetWidth/2),n=Math.round(t.y-o.htmlEl.offsetHeight/2);o.htmlEl.style.left=e+"px",o.htmlEl.style.top=n+"px",o.htmlEl.style.visibility="visible"};o.htmlEl.offsetWidth&&o.htmlEl.offsetHeight?e():setTimeout(function(){return e()})}},o.htmlEl=e,o.position=n,o}return c.b(e,t),e.prototype.onAdd=function(){this.getPanes().overlayMouseTarget.appendChild(this.htmlEl),this.htmlEl.style.position="absolute"},e.prototype.draw=function(){this.setPosition(this.position),this.setZIndex(this.zIndex),this.setVisible(this.visible)},e.prototype.onRemove=function(){},e.prototype.getPosition=function(){return this.position},e.prototype.setZIndex=function(t){t&&(this.zIndex=t),this.htmlEl.style.zIndex=this.zIndex},e.prototype.setVisible=function(t){this.htmlEl.style.display=t?"inline-block":"none",this.visible=t},e}(google.maps.OverlayView))(t,e)}(this.el,this.position),this.mapObject.setMap(this.nguiMapComponent.map),this.nguiMap.setObjectEvents($,this,"mapObject"),z.a.call(this.inputChanges$,1e3).subscribe(function(e){return t.nguiMap.updateGoogleObject(t.mapObject,e)}),this.nguiMapComponent.addToMapObjectGroup("CustomMarker",this.mapObject),this.initialized$.emit(this.mapObject)},c.a([Object(s.T)(),c.c("design:type","function"==typeof(e=void 0!==s.x&&s.x)&&e||Object)],t.prototype,"initialized$",void 0),t=c.a([Object(s.o)({selector:"ngui-map > custom-marker",inputs:D,outputs:$,template:"\n    <ng-content></ng-content>\n  "}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object,"function"==typeof(o=void 0!==s.v&&s.v)&&o||Object,"function"==typeof(i=void 0!==M&&M)&&i||Object])],t);var e,n,o,i}(),_=["center","clickable","draggable","editable","fillColor","fillOpacity","map","radius","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","options","geoFallbackCenter"],W=["centerChanged","click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","radiusChanged","rightclick"],B=function(t){function e(e){var n=t.call(this,e,"Circle",_,W)||this;return n.nguiMapComp=e,n.objectOptions={},n}return c.b(e,t),e.prototype.initialize=function(){t.prototype.initialize.call(this),this.setCenter()},e.prototype.setCenter=function(){var t=this;this.center?"string"==typeof this.center&&this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address:this.center}).subscribe(function(e){console.log("setting circle center from address",t.center),t.mapObject.setCenter(e[0].geometry.location)},function(e){console.error("ngui-map, error in finding location from",t.center),t.mapObject.setCenter(t.objectOptions.geoFallbackCenter||new google.maps.LatLng(0,0))})):this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function(e){console.log("setting circle center from current location");var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.mapObject.setCenter(n)},function(e){console.error("ngui-map, error in finding the current position"),t.mapObject.setCenter(t.objectOptions.geoFallbackCenter||new google.maps.LatLng(0,0))}))},e=c.a([Object(s.u)({selector:"ngui-map>circle, ngui-map>map-circle",inputs:_,outputs:W}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),G=["controlPosition","controls","drawingMode","featureFactory","style","geoJson","geoJsonUrl"],V=["addfeature","click","dblclick","mousedown","mouseout","mouseover","mouseup","removefeature","removeproperty","rightclick","setgeometry","setproperty"],H=function(t){function e(e){return t.call(this,e,"Data",G,V)||this}return c.b(e,t),e.prototype.initialize=function(){this.geoJson?(console.log("this.geoJson",this.geoJson),this.nguiMapComponent.map.data.addGeoJson(this.geoJson)):this.geoJsonUrl?(console.log("this.geoJsonUrl",this.geoJsonUrl),this.nguiMapComponent.map.data.loadGeoJson(this.geoJsonUrl)):(this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),console.log(this.mapObjectName,"initialization objectOptions",this.objectOptions),this.nguiMapComponent.map.data.add(this.objectOptions)),this.mapObject=this.nguiMapComponent.map.data,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e=c.a([Object(s.u)({selector:"ngui-map > data-layer",inputs:G,outputs:V}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),Z=["directions","draggable","hideRouteList","infoWindow","panel","markerOptions","polylineOptions","preserveViewport","routeIndex","suppressBicyclingLayer","suppressInfoWindows","suppressMarkers","suppressPolylines"],U=["directions_changed"],q=function(t){function e(e,n){var o=t.call(this,e,"DirectionsRenderer",Z,U)||this;return o.geolocation=n,o}return c.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),"string"==typeof this.objectOptions.panel&&(this.objectOptions.panel=document.querySelector(this.objectOptions.panel)),console.log("DirectionsRenderer","initialization options",this.objectOptions,this.directionsRequest),this.directionsService=new google.maps.DirectionsService,this.directionsRenderer=new google.maps.DirectionsRenderer(this.objectOptions),this.directionsRenderer.setMap(this.nguiMapComponent.map),this.showDirections(this.directionsRequest),this.nguiMap.setObjectEvents(this.outputs,this,"directionsRenderer"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.directionsRenderer)},e.prototype.ngOnChanges=function(t){var e={};for(var n in t)-1!==this.inputs.indexOf(n)&&(e[n]=this.optionBuilder.googlize(t[n].currentValue));t.directionsRequest&&this.directionsRenderer&&this.directionsService&&this.showDirections(this.directionsRequest)},e.prototype.showDirections=function(t){var e=this;this.directionsService.route(t,function(t,n){n===google.maps.DirectionsStatus.OK?e.directionsRenderer.setDirections(t):console.error("Directions request failed due to "+n)})},e.prototype.ngOnDestroy=function(){t.prototype.ngOnDestroy.call(this),this.nguiMap.clearObjectEvents(this.outputs,this,"directionsRenderer")},c.a([Object(s.F)("directions-request"),c.c("design:type",Object)],e.prototype,"directionsRequest",void 0),e=c.a([Object(s.u)({selector:"ngui-map > directions-renderer",inputs:Z,outputs:U}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object,"function"==typeof(o=void 0!==y&&y)&&o||Object])],e);var n,o}(h),J=["options","circleOptions","drawingControl","drawingControlOptions","drawingMode","map","markerOptions","polygonOptions","polylineOptions","rectangleOptions"],K=["circlecomplete","markercomplete","overlaycomplete","polygoncomplete","polylinecomplete","rectanglecomplete"],Y=function(t){function e(e){var n=t.call(this,e,"DrawingManager",J,K)||this;return n.libraryName="drawing",n}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > drawing-manager",inputs:J,outputs:K}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),Q=["url","bounds","clickable","opacity"],X=["click","dblclick"],tt=function(t){function e(e){var n=t.call(this,e,"GroundOverlay",Q,X)||this;return n.objectOptions={},n}return c.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(["clickable","opacity"],this),console.log(this.mapObjectName,"initialization objectOptions",this.objectOptions),this.mapObject=new google.maps.GroundOverlay(this.url,this.bounds,this.objectOptions),this.mapObject.setMap(this.nguiMapComponent.map),this.mapObject.mapObjectName=this.mapObjectName,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e=c.a([Object(s.u)({selector:"ngui-map > ground-overlay",inputs:Q,outputs:X}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),et=["data","dissipating","gradient","maxIntensity","opacity","radius","options"],nt=[],ot=function(t){function e(e){var n=t.call(this,e,"HeatmapLayer",et,nt)||this;return n.libraryName="visualization",n}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > heatmap-layer",inputs:et,outputs:nt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),it=["clickable","preserveViewport","screenOverlays","suppressInfoWindows","url","zIndex","options"],rt=["click","defaultviewport_changed","status_changed"],at=function(t){function e(e){return t.call(this,e,"KmlLayer",it,rt)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > kml-layer",inputs:it,outputs:rt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),st=["anchorPoint","animation","clickable","cursor","draggable","icon","label","opacity","optimized","place","position","shape","title","visible","zIndex","options","geoFallbackPosition"],pt=["animationChanged","click","clickableChanged","cursorChanged","dblclick","drag","dragend","draggableChanged","dragstart","flatChanged","iconChanged","mousedown","mouseout","mouseover","mouseup","positionChanged","rightclick","shapeChanged","titleChanged","visibleChanged","zindexChanged"],ct=function(t){function e(e){var n=t.call(this,e,"Marker",st,pt)||this;return n.nguiMapComp=e,n.objectOptions={},console.log("marker constructor",9999999),n}return c.b(e,t),e.prototype.ngOnInit=function(){var t=this;this.nguiMapComponent.mapIdledOnce?this.initialize():this.nguiMapComponent.mapReady$.subscribe(function(e){return t.initialize()})},e.prototype.initialize=function(){t.prototype.initialize.call(this),this.setPosition()},e.prototype.setPosition=function(){var t=this;this.position?"string"==typeof this.position&&this._subscriptions.push(this.nguiMapComp.geoCoder.geocode({address:this.position}).subscribe(function(e){console.log("setting marker position from address",t.position),t.mapObject.setPosition(e[0].geometry.location)},function(e){console.error("ngui-map, error finding the location from",t.position),t.mapObject.setPosition(t.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))})):this._subscriptions.push(this.nguiMapComp.geolocation.getCurrentPosition().subscribe(function(e){console.log("setting marker position from current location");var n=new google.maps.LatLng(e.coords.latitude,e.coords.longitude);t.mapObject.setPosition(n)},function(e){console.error("ngui-map, error finding the current location"),t.mapObject.setPosition(t.objectOptions.geoFallbackPosition||new google.maps.LatLng(0,0))}))},e=c.a([Object(s.u)({selector:"ngui-map > marker",inputs:st,outputs:pt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),lt=function(){function t(t,e,n){var o=this;this.optionBuilder=t,this.elementRef=e,this.apiLoader=n,this.place_changed=new s.x,this.initialized$=new s.x,this.initialize=function(){o.objectOptions=o.optionBuilder.googlizeAllInputs(["bounds","componentRestrictions","types"],o),console.log("places autocomplete options",o.objectOptions),o.autocomplete=new google.maps.places.Autocomplete(o.elementRef.nativeElement,o.objectOptions),console.log("this.autocomplete",o.autocomplete),o.autocomplete.addListener("place_changed",function(t){o.place_changed.emit(o.autocomplete.getPlace())}),o.initialized$.emit(o.autocomplete)},n.load(),n.api$.subscribe(function(){return o.initialize()})}return c.a([Object(s.F)("bounds"),c.c("design:type",Object)],t.prototype,"bounds",void 0),c.a([Object(s.F)("componentRestrictions"),c.c("design:type",Object)],t.prototype,"componentRestrictions",void 0),c.a([Object(s.F)("types"),c.c("design:type",Array)],t.prototype,"types",void 0),c.a([Object(s.T)("place_changed"),c.c("design:type","function"==typeof(e=void 0!==s.x&&s.x)&&e||Object)],t.prototype,"place_changed",void 0),c.a([Object(s.T)(),c.c("design:type","function"==typeof(n=void 0!==s.x&&s.x)&&n||Object)],t.prototype,"initialized$",void 0),t=c.a([Object(s.u)({selector:"[places-auto-complete]"}),c.c("design:paramtypes",["function"==typeof(o=void 0!==f&&f)&&o||Object,"function"==typeof(i=void 0!==s.v&&s.v)&&i||Object,"function"==typeof(r=void 0!==j&&j)&&r||Object])],t);var e,n,o,i,r}(),ut=["clickable","draggable","editable","fillColor","fillOpacity","geodesic","paths","strokeColor","strokeOpacity","strokePosition","strokeWeight","visible","zIndex","options"],mt=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],dt=function(t){function e(e){return t.call(this,e,"Polygon",ut,mt)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map>polygon, ngui-map>map-polygon",inputs:ut,outputs:mt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),gt=["clickable","draggable","editable","geodesic","icons","path","strokeColor","strokeOpacity","strokeWeight","visible","zIndex","options"],ht=["click","dblclick","drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup","rightclick"],ft=function(t){function e(e){return t.call(this,e,"Polyline",gt,ht)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > polyline",inputs:gt,outputs:ht}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),bt=["selector","options","addressControl","addressControlOptions","clickToGo","disableDefaultUI","disableDoubleClickZoom","enableCloseButton","fullscreenControl","fullscreenControlOptions","imageDateControl","linksControl","motionTracking","motionTrackingControl","panControl","panControlOptions","pano","position","pov","scrollwheel","showRoadLabels","visible","zoomControl","zoomControlOptions"],yt=["closeclick","pano_changed","position_changed","pov_changed","resize","status_changed","visible_changed","zoom_changed"],vt=function(t){function e(e){return t.call(this,e,"StreetViewPanorama",bt,yt)||this}return c.b(e,t),e.prototype.initialize=function(){this.objectOptions=this.optionBuilder.googlizeAllInputs(this.inputs,this),console.log(this.mapObjectName,"initialization objectOptions",this.objectOptions);var t;this.objectOptions.selector?(t=document.querySelector(this.selector),delete this.objectOptions.selector):t=this.nguiMapComponent.el,"string"==typeof this.objectOptions.position&&delete this.objectOptions.position,this.mapObject=new google.maps[this.mapObjectName](t,this.objectOptions),this.mapObject.mapObjectName=this.mapObjectName,this.mapObject.nguiMapComponent=this.nguiMapComponent,this.nguiMap.setObjectEvents(this.outputs,this,"mapObject"),this.nguiMapComponent.addToMapObjectGroup(this.mapObjectName,this.mapObject),this.initialized$.emit(this.mapObject)},e.prototype.ngOnDestroy=function(){this.nguiMapComponent.el&&this.nguiMap.clearObjectEvents(this.outputs,this,"mapObject")},e=c.a([Object(s.u)({selector:"ngui-map > street-view-panorama",inputs:bt,outputs:yt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),Ot=["autoRefresh","options"],kt=[],jt=function(t){function e(e){return t.call(this,e,"TrafficLayer",Ot,kt)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > traffic-layer",inputs:Ot,outputs:kt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),Ct=[],wt=[],Mt=function(t){function e(e){return t.call(this,e,"TransitLayer",Ct,wt)||this}return c.b(e,t),e=c.a([Object(s.u)({selector:"ngui-map > transit-layer",inputs:Ct,outputs:wt}),c.c("design:paramtypes",["function"==typeof(n=void 0!==I&&I)&&n||Object])],e);var n}(h),Lt=[I,N,ct,B,F,dt,N,ft,tt,Mt,jt,ot,P,at,H,vt,lt,q,Y],zt=function(){function t(){}return e=t,t.forRoot=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:O,useValue:t}]}},t=e=c.a([Object(s.M)({imports:[d.b],declarations:Lt,exports:[Lt],providers:[w,y,M,f,{provide:j,useClass:C}]})],t);var e}(),xt=n("vD5b"),St=(n("GQSG"),function(){function t(t){this.http=t}return t.prototype.getText=function(t){var e="https://raw.githubusercontent.com/ng2-ui/map/master/app/map-components/"+t.replace("Directive",".directive.ts").replace("Service",".service.ts").replace("Component",".component.ts").replace(/([A-Z])/g,function(t,e){return"-"+e.toLowerCase()}).replace(/^-/,"");return this.http.get(e).map(function(t){return a(t.text())})},t.prototype.plnkr=function(t){xt.Plunker.create().setDescription("Angular2+ ng2-ui map demo").addIndexHeadLine("<title>Ngui Map</title>").addIndexHeadLine('<meta charset="UTF-8">').addIndexHeadLine('<meta name="viewport" content="width=device-width, initial-scale=1">').addIndexHeadLine('<script src="https://unpkg.com/core-js/client/shim.min.js"><\/script>').addIndexHeadLine('<script src="https://unpkg.com/zone.js@0.6.25?main=browser"><\/script>').addIndexHeadLine('<script src="https://unpkg.com/reflect-metadata@0.1.3"><\/script>').addIndexHeadLine('<script src="https://unpkg.com/systemjs@0.19.27/dist/system.src.js"><\/script>').addFile({name:"app.component.ts",contents:a(t)}).addFile({name:"main.ts",contents:"\n// The browser platform with a compiler\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { NgModule }       from '@angular/core';\nimport { BrowserModule }  from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule }    from \"@angular/forms\";\n\nimport { AppComponent }   from './app.component';\n\n//noinspection TypeScriptCheckImport\nimport { NguiMapModule } from '@ngui/map';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NguiMapModule.forRoot({\n      apiUrl: 'https://maps.google.com/maps/api/js?libraries=visualization,places,drawing'\n    })\n  ],\n  declarations: [AppComponent],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n// Compile and launch the module\nplatformBrowserDynamic().bootstrapModule(AppModule);\n  "}).addFile({name:"systemjs.config.js",contents:"\nSystem.config({\n  // DEMO ONLY! REAL CODE SHOULD NOT TRANSPILE IN THE BROWSER\n  transpiler: 'ts',\n  typescriptOptions: {\n    tsconfig: true\n  },\n  meta: {\n    'typescript': {\n      \"exports\": \"ts\"\n    }\n  },\n  paths: {     // paths serve as alias\n    'npm:': 'https://unpkg.com/'\n  },\n  map: {      // map tells the System loader where to look for things\n    app: '.', // our app is within the app folder\n\n    // angular bundles\n    '@angular/core': 'npm:@angular/core/bundles/core.umd.js',\n    '@angular/common': 'npm:@angular/common/bundles/common.umd.js',\n    '@angular/compiler': 'npm:@angular/compiler/bundles/compiler.umd.js',\n    '@angular/platform-browser': 'npm:@angular/platform-browser/bundles/platform-browser.umd.js',\n    '@angular/platform-browser-dynamic': 'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js',\n    '@angular/http': 'npm:@angular/http/bundles/http.umd.js',\n    '@angular/router': 'npm:@angular/router/bundles/router.umd.js',\n    '@angular/forms': 'npm:@angular/forms/bundles/forms.umd.js',\n    '@angular/upgrade': 'npm:@angular/upgrade/bundles/upgrade.umd.js',\n\n    // other libraries\n    'rxjs':                       'npm:rxjs',\n    'ts':                         'npm:plugin-typescript@4.0.10/lib/plugin.js',\n    'typescript':                 'npm:typescript@2.0.2/lib/typescript.js',\n\n    '@ngui/map': 'npm:@ngui/map/dist/map.umd.js'\n  },\n  packages: {   // packages tells the System loader how to load when no filename and/or no extension\n    app: { main: './main.ts', defaultExtension: 'ts' },\n    rxjs: { defaultExtension: 'js' }\n  }\n});\n  "}).addFile({name:"tsconfig.json",contents:'\n{\n  "compilerOptions": {\n    "target": "es5",\n    "module": "commonjs",\n    "moduleResolution": "node",\n    "sourceMap": true,\n    "emitDecoratorMetadata": true,\n    "experimentalDecorators": true,\n    "removeComments": false,\n    "noImplicitAny": true,\n    "suppressImplicitAnyIndexErrors": true\n  }\n}\n  '}).addIndexHeadLine("<script> System.import('app');<\/script>").setIndexBody("<my-app>Loading...</my-app>").save()},t=c.a([Object(s.C)(),c.c("design:paramtypes",["function"==typeof(e=void 0!==m.a&&m.a)&&e||Object])],t);var e}()),It=n("BkNc"),Rt=function(){function t(t){this.center="Brampton, Canada",this.positions=[],t.events.subscribe(function(t){document.querySelector(".prettyprinted")&&document.querySelector(".prettyprinted").classList.remove("prettyprinted"),t instanceof It.a&&setTimeout(function(t){return PR.prettyPrint()},500)})}return t=c.a([Object(s.o)({selector:"ngui-map-app",template:n("xGuH")}),c.c("design:paramtypes",["function"==typeof(e=void 0!==It.b&&It.b)&&e||Object])],t);var e}(),Tt=function(){function t(t){var e=this;this.sc=t,this.marker={display:!0,lat:null,lng:null},t.getText("SimpleInfoWindowComponent").subscribe(function(t){return e.code=t})}return t.prototype.clicked=function(t){var e=t.target;this.marker.lat=e.getPosition().lat(),this.marker.lng=e.getPosition().lng(),e.nguiMapComponent.openInfoWindow("iw",e)},t.prototype.hideMarkerInfo=function(){this.marker.display=!this.marker.display},t=c.a([Object(s.o)({template:'\n    <h1>Simple InfoWindow</h1>\n    <ngui-map center="Brampton, Canada">\n      <marker position="Brampton, Canada" draggable="true" (click)="clicked($event)"></marker>\n      <info-window id="iw">\n        <div *ngIf="marker.display">\n          lat: {{ marker.lat }}, lng: {{ marker.lng }}\n        </div>\n        <button (click)="hideMarkerInfo()">Hide Info</button>\n      </info-window>\n    </ngui-map>\n    Please click the marker to see a info window\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n    '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Pt=function(){function t(t){var e=this;this.sc=t,t.getText("SimpleMapComponent").subscribe(function(t){return e.code=t})}return t.prototype.onClick=function(t){if(t instanceof MouseEvent)return!1;console.log("map is clicked",t,t.target)},t=c.a([Object(s.o)({template:'\n    <h1>Simple Map</h1>\n    <ngui-map center="Brampton, Canada"\n      (mapClick)="onClick($event)"\n      [fullscreenControl]="true"\n      [fullscreenControlOptions]="{position: \'TOP_RIGHT\'}"></ngui-map>\n    "center" can be an;\n    <ul>\n      <li>lat/lng array e.g., [42.99, -77.79]\n      <li> an address. e.g. Brampton, Canada\n      <li> or, none(for the current position)\n    </ul>\n    <ngui-map center="some-invalid-location"\n      [geoFallbackCenter]="[42.99, -77.79]"></ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>'}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),At=function(){function t(t){var e=this;this.sc=t,t.getText("SimpleCircleComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Simple Circle</h1>\n    <ngui-map center="Brampton, Canada" scrollwheel="false">\n      <circle center="Brampton, Canada"\n        [strokeColor]="\'#FF0000\'"\n        [strokeOpacity]="0.8"\n        [strokeWeight]="2"\n        [editable]="true"\n        radius="100"\n        draggable="true"></circle>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>'}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Et=function(){function t(t){var e=this;this.sc=t,t.getText("SimpleMarkerComponent").subscribe(function(t){return e.code=t})}return t.prototype.log=function(t,e){if(t instanceof MouseEvent)return!1;console.log("event .... >",t,e)},t=c.a([Object(s.o)({template:'\n    <h1>Simple Marker</h1>\n    <ngui-map center="Brampton, Canada"\n      [zoomControlOptions]="{position: \'TOP_CENTER\'}"\n      [fullscreenControl]="true"\n      [fullscreenControlOptions]="{position: \'TOP_CENTER\'}"\n      (click)="log($event)"\n      [scrollwheel]="false">\n      <marker position="will-fall-back-to-brampton-canada"\n        [geoFallbackPosition]="[43.73154789999999, -79.7449296972229]"\n        (dragstart)="log($event, \'dragstart\')"\n        (dragend)="log($event, \'dragend\')"\n        draggable="true"></marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>'}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Nt=(n("HECM"),function(){function t(t){var e=this;this.sc=t,this.positions=[],this.positions=this.getRandomMarkers(),t.getText("MarkerNgForComponent").subscribe(function(t){return e.code=t})}return t.prototype.getRandomMarkers=function(){for(var t,e,n=[],o=0;o<9;o++)t=Math.random()*(43.7399-43.73)+43.73,e=Math.random()*(-79.76- -79.7699)-79.7699,n.push([t,e]);return n},t.prototype.showMarkersFromObservable=function(){var t=this;b.a.of(this.getRandomMarkers()).subscribe(function(e){t.positions=e})},t=c.a([Object(s.o)({template:'\n    <h1>Marker Wigh *ngFor</h1>\n    <ngui-map zoom="13" center="Brampton, Canada">\n      <marker *ngFor="let pos of positions" [position]="pos"></marker>\n    </ngui-map>\n    <button (click)="positions = getRandomMarkers()">Show Random Markers</button> <br/>\n    <button (click)="showMarkersFromObservable()">Show Random Markers From Observable</button>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}()),Dt=function(){function t(t){var e=this;this.sc=t,this.positions=[],t.getText("MultipleMapComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Simple Map 1</h1>\n    <ngui-map zoom="13" center="Brampton, Canada" scrollwheel="false">\n      <marker *ngFor="let pos of positions" [position]="pos"></marker>\n    </ngui-map>\n\n    <h1>Simple Map 2</h1>\n    <ngui-map center="43.99, -78.79"></ngui-map>\n\n    <h1>Simple Map 3</h1>\n    <ngui-map center="Brampton, Canada" scrollwheel="false">\n      <marker position="Brampton, Canada"></marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),$t=function(){function t(t){var e=this;this.sc=t,this.paths=[[{lat:25.774,lng:-80.19},{lat:18.466,lng:-66.118},{lat:32.321,lng:-64.757}],[{lat:28.745,lng:-70.579},{lat:29.57,lng:-67.514},{lat:27.339,lng:-66.668}]],t.getText("PolygonComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Polygon</h1>\n    <ngui-map zoom="5" center="24.886, -70.268" scrollwheel="false">\n      <polygon [editable]="true"\n        [paths]="paths"\n        [strokeColor]="\'#FFC107\'"\n        [strokeOpacity]="0.8"\n        [strokeWeight]="2"\n        [fillColor]="\'#FFC107\'"\n        [fillOpacity]="0.35"></polygon>\n    </ngui-map>\n    <ngui-map zoom="5" center="24.886, -70.268" scrollwheel="false">\n      <map-polygon [editable]="true"\n        [paths]="paths"\n        [strokeColor]="\'#FFC107\'"\n        [strokeOpacity]="0.8"\n        [strokeWeight]="2"\n        [fillColor]="\'#FFC107\'"\n        [fillOpacity]="0.35"></map-polygon>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Ft=function(){function t(t){var e=this;this.sc=t,this.allOptions={center:{lat:36.964,lng:-122.015},zoom:18,mapTypeId:"satellite",tilt:45},t.getText("MapWithOptionsComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Map With Options - satellite view</h1>\n    <ngui-map [options]="allOptions" center="36.964, -122.015"></ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),_t=function(){function t(t){var e=this;this.sc=t,this.path=[{lat:37.772,lng:-122.214},{lat:21.291,lng:-157.821},{lat:-18.142,lng:178.431},{lat:-27.467,lng:153.027}],t.getText("SimplePolylineComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Simple Polyine</h1>\n    <ngui-map zoom="3" center="0, -180" mapTypeId="terrain" scrollwheel="false">\n      <polyline [editable]="true"\n        [path]="path"\n        [geodesic]="true"\n        [strokeColor]="\'#FF0000\'"\n        [strokeOpacity]="1"\n        [strokeWeight]="2"></polyline>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Wt=function(){function t(t){var e=this;this.sc=t,this.bounds={north:40.773941,south:40.712216,east:-74.12544,west:-74.22655},t.getText("SimpleGroundOverlayComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Simple Ground Overlay</h1>\n    <ngui-map zoom="12" center="40.740, -74.18" scrollwheel="false">\n      <ground-overlay\n        url="https://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg"\n        [bounds]="bounds"\n        [opacity]="0.8"\n        [clickable]="true"></ground-overlay>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Bt=function(){function t(t){var e=this;this.sc=t,t.getText("BicyclingLayerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Bicycling Layer</h1>\n    <ngui-map zoom="14" center="42.3726399, -71.1096528">\n      <bicycling-layer></bicycling-layer>\n    </ngui-map>\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n    <pre class="prettyprint">{{code}}</pre>'}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Gt=function(){function t(t){var e=this;this.sc=t,t.getText("TrafficLayerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Traffic Layer</h1>\n    <ngui-map zoom="13" center="34.04924594193164, -118.24104309082031">\n      <traffic-layer></traffic-layer>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Vt=function(){function t(t){var e=this;this.sc=t,t.getText("TransitLayerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Transit Layer</h1>\n    <ngui-map zoom="13" center="51.501904, -0.115871">\n      <transit-layer></transit-layer>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Ht=function(){function t(t){var e=this;this.sc=t,this.points=[],t.getText("HeatmapLayerComponent").subscribe(function(t){return e.code=t})}return t.prototype.ngOnInit=function(){var t=this;this.heatmapLayer.initialized$.subscribe(function(e){t.points=[new google.maps.LatLng(37.782551,-122.445368),new google.maps.LatLng(37.782745,-122.444586),new google.maps.LatLng(37.782842,-122.443688)],t.heatmap=e,t.map=t.heatmap.getMap()})},t.prototype.toggleHeatmap=function(){this.heatmap.setMap(this.heatmap.getMap()?null:this.map)},t.prototype.changeGradient=function(){this.heatmap.set("gradient",this.heatmap.get("gradient")?null:["rgba(0, 255, 255, 0)","rgba(0, 255, 255, 1)","rgba(0, 191, 255, 1)","rgba(0, 127, 255, 1)","rgba(0, 63, 255, 1)","rgba(0, 0, 255, 1)","rgba(0, 0, 223, 1)","rgba(0, 0, 191, 1)","rgba(0, 0, 159, 1)","rgba(0, 0, 127, 1)","rgba(63, 0, 91, 1)","rgba(127, 0, 63, 1)","rgba(191, 0, 31, 1)","rgba(255, 0, 0, 1)"])},t.prototype.changeRadius=function(){this.heatmap.set("radius",this.heatmap.get("radius")?null:20)},t.prototype.changeOpacity=function(){this.heatmap.set("opacity",this.heatmap.get("opacity")?null:.2)},t.prototype.loadRandomPoints=function(){this.points=[];for(var t=0;t<9;t++)this.addPoint()},t.prototype.addPoint=function(){var t=.0099*Math.random()+37.782551,e=.0099*Math.random()-122.445368,n=new google.maps.LatLng(t,e);this.points.push(n)},c.a([Object(s._16)(ot),c.c("design:type","function"==typeof(e=void 0!==ot&&ot)&&e||Object)],t.prototype,"heatmapLayer",void 0),t=c.a([Object(s.o)({template:'\n    <h1>Heatmap Layer</h1>\n    <ngui-map zoom="13" center="37.782551, -122.445368">\n      <div id="floating-panel">\n        <button (click)="toggleHeatmap()">Toggle Heatmap</button>\n        <button (click)="changeGradient()">Change gradient</button>\n        <button (click)="changeRadius()">Change radius</button>\n        <button (click)="changeOpacity()">Change opacity</button>\n      </div>\n      <heatmap-layer [data]="points"></heatmap-layer>\n    </ngui-map>\n    <button (click)="loadRandomPoints()">Load Random Points</button>\n    <br/>\n    <button (click)="addPoint()">Add Point</button>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  ',styles:["\n    #floating-panel {\n      position: absolute;\n      background-color: #fff;\n      border: 1px solid #999;\n      font-family: 'Roboto','sans-serif';\n      left: 25%;\n      line-height: 30px;\n      padding: 5px;\n      padding-left: 10px;\n      text-align: center;\n      top: 10px;\n      z-index: 5;\n    }\n  "]}),c.c("design:paramtypes",["function"==typeof(n=void 0!==St&&St)&&n||Object])],t);var e,n}(),Zt=function(){function t(t){var e=this;this.sc=t,t.getText("KmlLayerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Kml Layer</h1>\n    <ngui-map zoom="11" center="41.876, -87.624">\n      <kml-layer url="http://googlemaps.github.io/js-v2-samples/ggeoxml/cta.kml"></kml-layer>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Ut=function(){function t(t){var e=this;this.sc=t,t.getText("DataLayerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Data Layer</h1>\n    <ngui-map zoom="4" center="-28, 137">\n      <data-layer geoJsonUrl="https://storage.googleapis.com/mapsdevsite/json/google.json"></data-layer>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),qt=function(){function t(t){var e=this;this.sc=t,t.getText("StreetViewPanoramaComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Simple StreetView</h1>\n    <ngui-map zoom="14" center="37.869260, -122.254811">\n      <street-view-panorama\n        position="37.869260, -122.254811"\n        pov="{heading: 165, pitch: 0}"\n        zoom="1"\n      ></street-view-panorama>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Jt=function(){function t(t,e){var n=this;this.ref=t,this.sc=e,this.address={},e.getText("PlacesAutoCompleteComponent").subscribe(function(t){return n.code=t})}return t.prototype.initialized=function(t){this.autocomplete=t},t.prototype.placeChanged=function(t){this.center=t.geometry.location;for(var e=0;e<t.address_components.length;e++){var n=t.address_components[e].types[0];this.address[n]=t.address_components[e].long_name}this.ref.detectChanges()},t=c.a([Object(s.o)({template:'\n    <h1>Place Autocomplete Address Form</h1>\n    <input places-auto-complete\n      (place_changed)="placeChanged($event)"\n      [types]="[\'geocode\']" />\n    <p>\n    <ngui-map [center]="center"></ngui-map>\n    place: {{address | json}}\n    </p>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==s.l&&s.l)&&e||Object,"function"==typeof(n=void 0!==St&&St)&&n||Object])],t);var e,n}(),Kt=function(){function t(t,e){var n=this;this.cdr=t,this.sc=e,this.direction={origin:"penn station, new york, ny",destination:"260 Broadway New York NY 10007",travelMode:"WALKING"},e.getText("DirectionsRendererComponent").subscribe(function(t){return n.code=t})}return t.prototype.ngOnInit=function(){var t=this;this.directionsRendererDirective.initialized$.subscribe(function(e){t.directionsRenderer=e})},t.prototype.directionsChanged=function(){this.directionsResult=this.directionsRenderer.getDirections(),this.cdr.detectChanges()},t.prototype.showDirection=function(){this.directionsRendererDirective.showDirections(this.direction)},c.a([Object(s._16)(q),c.c("design:type","function"==typeof(e=void 0!==q&&q)&&e||Object)],t.prototype,"directionsRendererDirective",void 0),t=c.a([Object(s.o)({template:'\n    <h1>Directions Renderer</h1>\n    <div id="floating-panel">\n    <b>Start: </b>\n    <select [ngModel]="direction.origin"\n     (ngModelChange)="direction.origin = $event; showDirection()">\n      <option [ngValue]="\'penn station, new york, ny\'">Penn Station</option>\n      <option [ngValue]="\'grand central station, new york, ny\'">Grand Central Station</option>\n    </select>\n    <b>End: </b>\n    <select [ngModel]="direction.destination"\n     (ngModelChange)="direction.destination = $event; showDirection()">\n      <option [ngValue]="\'260 Broadway New York NY 10007\'">City Hall</option>\n      <option [ngValue]="\'W 49th St & 5th Ave, New York, NY 10020\'">Rockefeller Center</option>\n    </select>\n    </div>\n    {{direction | json}}\n    <ngui-map zoom="13" center="40.771, -73.974">\n      <directions-renderer\n        [suppressMarkers]="true"\n        [draggable]="true"\n        panel="#my-panel"\n        (directions_changed)="directionsChanged()"\n        [directions-request]="direction">\n      </directions-renderer>\n    </ngui-map>\n    <div id="my-panel"></div>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(n=void 0!==s.l&&s.l)&&n||Object,"function"==typeof(o=void 0!==St&&St)&&o||Object])],t);var e,n,o}(),Yt=function(){function t(t){var e=this;this.sc=t,t.getText("DrawingManagerComponent").subscribe(function(t){return e.code=t})}return t.prototype.ngOnInit=function(){var t=this;this.drawingManager.initialized$.subscribe(function(e){google.maps.event.addListener(e,"overlaycomplete",function(n){n.type!==google.maps.drawing.OverlayType.MARKER&&(e.setDrawingMode(null),google.maps.event.addListener(n.overlay,"click",function(e){t.selectedOverlay=n.overlay,t.selectedOverlay.setEditable(!0)}),t.selectedOverlay=n.overlay)})})},t.prototype.deleteSelectedOverlay=function(){this.selectedOverlay&&(this.selectedOverlay.setMap(null),delete this.selectedOverlay)},c.a([Object(s._16)(Y),c.c("design:type","function"==typeof(e=void 0!==Y&&Y)&&e||Object)],t.prototype,"drawingManager",void 0),t=c.a([Object(s.o)({template:'\n    <h1>Drawing Manager</h1>\n    <ngui-map zoom="8" center="-34.397, 150.644">\n      <drawing-manager\n        [drawingMode]="\'marker\'"\n        [drawingControl]="true"\n        [drawingControlOptions]="{\n          position: 2,\n          drawingModes: [\'marker\', \'circle\', \'polygon\', \'polyline\', \'rectangle\']\n         }"\n        [circleOptions]="{\n          fillColor: \'#ffff00\',\n          fillOpacity: 1,\n          strokeWeight: 5,\n          editable: true,\n          zIndex: 1\n        }"></drawing-manager>\n    </ngui-map>\n    selectedOverlay: {{selectedOverlay}} <br/>\n    <button (click)="deleteSelectedOverlay()">Delete Selected Overlay</button>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(n=void 0!==St&&St)&&n||Object])],t);var e,n}(),Qt=function(){function t(t){var e=this;this.sc=t,this.positions=[],t.getText("EventArgumentsComponent").subscribe(function(t){return e.code=t})}return t.prototype.onClick=function(t){t instanceof MouseEvent||(this.positions.push(t.latLng),t.target.panTo(t.latLng))},t=c.a([Object(s.o)({template:'\n    <h1>Event Arguments</h1>\n    Implementation of https://developers.google.com/maps/documentation/javascript/examples/event-arguments\n    <br/><br/>\n    Click the map to add marker and center it.\n    <ngui-map zoom="4" center="-25.363882, 131.044922" (click)="onClick($event)">\n      <marker *ngFor="let pos of positions" [position]="pos"></marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),Xt=function(){function t(t){var e=this;this.sc=t,t.getText("CustomMarkerComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Custom Marker</h1>\n    <ngui-map center="Brampton, Canada">\n      <custom-marker position="Brampton, Canada">\n        <div><b>Hi, USA</b>\n          <img src="http://icons.iconarchive.com/icons/custom-icon-design/2014-world-cup-flags/32/USA-icon.png" />\n        </div>\n      </custom-marker>\n      <marker position="Brampton, Canada"></marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),te=function(){function t(t){var e=this;this.sc=t,this.positions=[],this.count=0,this.positions=this.getRandomMarkers(),t.getText("CustomMarkerNgForComponent").subscribe(function(t){return e.code=t})}return t.prototype.getRandomMarkers=function(){for(var t,e,n=[],o=0;o<9;o++)t=Math.random()*(43.7399-43.73)+43.73,e=Math.random()*(-79.76- -79.7699)-79.7699,n.push([t,e]);return n},t.prototype.showMarkersFromObservable=function(){var t=this;b.a.of(this.getRandomMarkers()).subscribe(function(e){t.positions=e})},t=c.a([Object(s.o)({template:'\n    <h1>Custom Marker With *ngFor</h1>\n    <ngui-map zoom="13" center="Brampton, Canada">\n      <custom-marker *ngFor="let pos of positions" [position]="pos">\n        <div class="custom-icon">{{count}}</div>\n      </custom-marker>\n    </ngui-map>\n    <button (click)="positions = getRandomMarkers()">Show Random Markers</button> <br/>\n    <button (click)="showMarkersFromObservable()">Show Random Markers From Observable</button> <br/>\n    <button (click)="count = count + 1">Increment</button> <br/>\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n    <pre class="prettyprint">{{code}}</pre>\n  ',styles:["\n      .custom-icon {\n        width: 30px;\n        height: 30px;\n        border-radius: 50%;\n        background-color:blue;\n        border: 2px solid white;\n        color:white;\n        font-size:20px;\n        text-align:center;\n      }\n    "]}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),ee=function(){function t(t){var e=this;this.sc=t,t.getText("MapWithStreetviewComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Map With StreetView</h1>\n    <ngui-map\n      center="40.6892,-74.0444"\n      zoom="18"\n      map-type-id="MapTypeId.SATELLITE"\n      tilt="45"\n      streetView="StreetViewPanorama(document.querySelector(\'div#sv\'), {position:new google.maps.LatLng(40.688738,-74.043871)})">\n    </ngui-map>\n    <div id="sv"></div>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  ',styles:["#sv {width: 50%; height: 300px} ngui-map {width: 50%; float: left}"]}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),ne=function(){function t(t){var e=this;this.sc=t,this.mapProps={center:"some-invalid-location",zoom:11},this.mapInfo={},t.getText("MapChangeMultiplePropertiesComponent").subscribe(function(t){return e.code=t})}return t.prototype.onIdle=function(t){var e=t.target;this.mapInfo.center=[e.getCenter().lat(),e.getCenter().lng()],this.mapInfo.zoom=e.getZoom()},t=c.a([Object(s.o)({template:'\n    <h1>Map Change Multiple Properties</h1>\n    <ngui-map\n      [center]="mapProps.center"\n      [zoom]="mapProps.zoom"\n      (idle)="onIdle($event)"\n      [geoFallbackCenter]="[42.99, -77.79]"></ngui-map>\n    <div> center: {{mapInfo.center}},  zoom: {{mapInfo.zoom}} </div>\n    <button id="change-props"\n      (click)="mapProps = {center: \'New York\', zoom: 8}">\n      Change Multiple Map Props\n    </button>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),oe=function(){function t(t){var e=this;this.sc=t,t.getText("MarkerWithCustomIconComponent").subscribe(function(t){return e.code=t})}return t=c.a([Object(s.o)({template:'\n    <h1>Marker With Custom Icon</h1>\n    <ngui-map center="Brampton, Canada">\n      <marker position="Brampton, Canada"\n       [icon]="{\n         url: \'https://plnkr.co/img/plunker.png\',\n         anchor: [16,16],\n         size: [32,32],\n         scaledSize: [32,32]\n       }">\n      </marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==St&&St)&&e||Object])],t);var e}(),ie=function(){function t(t,e){var n=this;this.cdr=t,this.sc=e,this.positions=[],this.onHeatmapInitialized=function(t){n.heatmap=t;var e=.0099*Math.random()+43.725,o=.0099*Math.random()-79.7699,i=[];i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),i.push(new google.maps.LatLng(e,o)),n.heatmap.setData(i),n.positions.push([43.72723792568628,-79.7657115210506]),n.positions.push([e,o]),console.log(n.positions),n.cdr.detectChanges()},e.getText("ExperimentComponent").subscribe(function(t){return n.code=t})}return t=c.a([Object(s.o)({template:'\n    <h3 *ngFor="let pos of positions">{{pos}}</h3>\n    <ngui-map zoom="14" center="Brampton, Canada">\n      <heatmap-layer dissipating="true" radius="25"\n        (initialized$)="onHeatmapInitialized($event)"></heatmap-layer>\n      <marker *ngFor="let pos of positions" [position]="pos"></marker>\n    </ngui-map>\n\n    <button (click)="sc.plnkr(code)">See in plunker</button>\n\n    <pre class="prettyprint">{{code}}</pre>\n  '}),c.c("design:paramtypes",["function"==typeof(e=void 0!==s.l&&s.l)&&e||Object,"function"==typeof(n=void 0!==St&&St)&&n||Object])],t);var e,n}(),re=[{path:"bicycling-layer",component:Bt},{path:"data-layer",component:Ut},{path:"directions-renderer",component:Kt},{path:"drawing-manager",component:Yt},{path:"heatmap-layer",component:Ht},{path:"kml-layer",component:Zt},{path:"map-with-options",component:Ft},{path:"map-with-streetview",component:ee},{path:"map-change-multiple-properties",component:ne},{path:"marker-ng-for",component:Nt},{path:"marker-with-custom-icon",component:oe},{path:"multiple-map",component:Dt},{path:"places-auto-complete",component:Jt},{path:"polygon",component:$t},{path:"simple-circle",component:At},{path:"simple-ground-overlay",component:Wt},{path:"simple-info-window",component:Tt},{path:"simple-map",component:Pt},{path:"simple-marker",component:Et},{path:"simple-polyline",component:_t},{path:"street-view-panorama",component:qt},{path:"traffic-layer",component:Gt},{path:"transit-layer",component:Vt},{path:"event-arguments",component:Qt},{path:"custom-marker",component:Xt},{path:"custom-marker-ng-for",component:te},{path:"experiment",component:ie},{path:"",redirectTo:"/simple-marker",pathMatch:"full"}],ae=It.c.forRoot(re),se=[Bt,Ut,Kt,Yt,Qt,Ht,Zt,Ft,ee,ne,Nt,Dt,Jt,$t,At,Wt,Tt,Pt,Et,_t,qt,Gt,Vt,Xt,te,oe,ie],pe=function(){function t(){}return t=c.a([Object(s.M)({imports:[l.a,u.a,m.b,ae,zt.forRoot({apiUrl:"https://maps.google.com/maps/api/js?key=AIzaSyCbMGRUwcqKjlYX4h4-P6t-xcDryRYLmCM&libraries=visualization,places,drawing"}),g.a],declarations:[Rt,se],providers:[St,{provide:d.g,useClass:d.d}],bootstrap:[Rt]})],t)}();Object(s._23)(),Object(p.a)().bootstrapModule(pe).catch(function(t){return console.log(t)})},wI8t:function(t,e){function n(t){return Promise.resolve().then(function(){throw new Error("Cannot find module '"+t+"'.")})}n.keys=function(){return[]},n.resolve=n,t.exports=n,n.id="wI8t"},xGuH:function(t,e){t.exports='<ul class="ls">\n  <h3> Examples </h3>\n  <li routerLink="/simple-map">Simple Map</li>\n  <li routerLink="/simple-circle">Simple Circle</li>\n  <li routerLink="/simple-marker">Simple Marker</li>\n  <li routerLink="/marker-ng-for">Marker With *ngFor</li>\n  <li routerLink="/marker-with-custom-icon">Marker With Custom Icon</li>\n  <li routerLink="/simple-info-window">Simple InfoWindow</li>\n  <li routerLink="/multiple-map">Multiple Map</li>\n  <li routerLink="/polygon">Polygon</li>\n  <li routerLink="/map-with-options">Map With Options</li>\n  <li routerLink="/map-with-streetview">Map With Streetview</li>\n  <li routerLink="/map-change-multiple-properties">Change Multiple Properties Of Map</li>\n  <li routerLink="/simple-polyline">Simple Polyline</li>\n  <li routerLink="/simple-ground-overlay">Simple Ground Overlay</li>\n  <li routerLink="/bicycling-layer">Bicycling Layer</li>\n  <li routerLink="/traffic-layer">Traffic Layer</li>\n  <li routerLink="/transit-layer">Transit Layer</li>\n  <li routerLink="/heatmap-layer">Heatmap Layer</li>\n  <li routerLink="/kml-layer">KML Layer</li>\n  <li routerLink="/data-layer">Data Layer</li>\n  <li routerLink="/street-view-panorama">Street View Panorama</li>\n  <li routerLink="/places-auto-complete">Places Auto Complete</li>\n  <li routerLink="/directions-renderer">Directions Renderer</li>\n  <li routerLink="/drawing-manager">Drawing Manager</li>\n  <li routerLink="/event-arguments">Event Arguments</li>\n  <li routerLink="/custom-marker">Custom Marker</li>\n  <li routerLink="/custom-marker-ng-for">Custom Marker *ngFor</li>\n  <li routerLink="/experiment">Experiment</li>\n</ul>\n<div class="components">\n  <router-outlet></router-outlet>\n</div>\n'}},[0]);